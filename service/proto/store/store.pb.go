// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github.com/osiloke/gostore_raft/service/proto/store/store.proto

/*
Package gostore_raft_service_store is a generated protocol buffer package.

It is generated from these files:
	github.com/osiloke/gostore_raft/service/proto/store/store.proto

It has these top-level messages:
	Request
	Response
*/
package gostore_raft_service_store

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Request struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *Request) Reset()                    { *m = Request{} }
func (m *Request) String() string            { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()               {}
func (*Request) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Request) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Request) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

type Response struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val string `protobuf:"bytes,2,opt,name=val" json:"val,omitempty"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Response) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Response) GetVal() string {
	if m != nil {
		return m.Val
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "gostore_raft.service.store.Request")
	proto.RegisterType((*Response)(nil), "gostore_raft.service.store.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Store service

type StoreClient interface {
	Get(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
	Set(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error)
}

type storeClient struct {
	c           client.Client
	serviceName string
}

func NewStoreClient(serviceName string, c client.Client) StoreClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "gostore_raft.service.store"
	}
	return &storeClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *storeClient) Get(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Store.Get", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *storeClient) Set(ctx context.Context, in *Request, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Store.Set", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Store service

type StoreHandler interface {
	Get(context.Context, *Request, *Response) error
	Set(context.Context, *Request, *Response) error
}

func RegisterStoreHandler(s server.Server, hdlr StoreHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Store{hdlr}, opts...))
}

type Store struct {
	StoreHandler
}

func (h *Store) Get(ctx context.Context, in *Request, out *Response) error {
	return h.StoreHandler.Get(ctx, in, out)
}

func (h *Store) Set(ctx context.Context, in *Request, out *Response) error {
	return h.StoreHandler.Set(ctx, in, out)
}

func init() {
	proto.RegisterFile("github.com/osiloke/gostore_raft/service/proto/store/store.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 185 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xb2, 0x4f, 0xcf, 0x2c, 0xc9,
	0x28, 0x4d, 0xd2, 0x4b, 0xce, 0xcf, 0xd5, 0xcf, 0x2f, 0xce, 0xcc, 0xc9, 0xcf, 0x4e, 0xd5, 0x4f,
	0xcf, 0x2f, 0x2e, 0xc9, 0x2f, 0x4a, 0x8d, 0x2f, 0x4a, 0x4c, 0x2b, 0xd1, 0x2f, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0xd5, 0x2f, 0x28, 0xca, 0x2f, 0xc9, 0xd7, 0x07, 0x4b, 0x40, 0x48, 0x3d, 0xb0,
	0x88, 0x90, 0x14, 0xb2, 0x6a, 0x3d, 0xa8, 0x6a, 0x3d, 0xb0, 0x90, 0x92, 0x2e, 0x17, 0x7b, 0x50,
	0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x00, 0x17, 0x73, 0x76, 0x6a, 0xa5, 0x04, 0xa3, 0x02,
	0xa3, 0x06, 0x67, 0x10, 0x88, 0x09, 0x12, 0x29, 0x4b, 0xcc, 0x91, 0x60, 0x82, 0x88, 0x94, 0x25,
	0xe6, 0x28, 0xe9, 0x71, 0x71, 0x04, 0xa5, 0x16, 0x17, 0xe4, 0xe7, 0x15, 0xa7, 0x12, 0xa3, 0xde,
	0x68, 0x3d, 0x23, 0x17, 0x6b, 0x30, 0xc8, 0x22, 0xa1, 0x20, 0x2e, 0x66, 0xf7, 0xd4, 0x12, 0x21,
	0x65, 0x3d, 0xdc, 0x8e, 0xd1, 0x83, 0xba, 0x44, 0x4a, 0x05, 0xbf, 0x22, 0x88, 0xfd, 0x4a, 0x0c,
	0x20, 0x33, 0x83, 0xa9, 0x6c, 0x66, 0x12, 0x1b, 0x38, 0xcc, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff,
	0xff, 0x83, 0x74, 0x21, 0xbf, 0x76, 0x01, 0x00, 0x00,
}
